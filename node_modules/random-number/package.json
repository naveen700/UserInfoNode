{
  "_args": [
    [
      {
        "raw": "random-number",
        "scope": null,
        "escapedName": "random-number",
        "name": "random-number",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Nodejs\\Assgiments\\Assingment1"
    ]
  ],
  "_from": "random-number@latest",
  "_id": "random-number@0.0.9",
  "_inCache": true,
  "_location": "/random-number",
  "_nodeVersion": "8.2.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/random-number-0.0.9.tgz_1502782049238_0.6713557324837893"
  },
  "_npmUser": {
    "name": "ashnur",
    "email": "ashnur@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "random-number",
    "scope": null,
    "escapedName": "random-number",
    "name": "random-number",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/random-number/-/random-number-0.0.9.tgz",
  "_shasum": "5907b96f05041807c52aed601c869524d86fbbd5",
  "_shrinkwrap": null,
  "_spec": "random-number",
  "_where": "D:\\Nodejs\\Assgiments\\Assingment1",
  "author": {
    "name": "ashnur"
  },
  "bugs": {
    "url": "https://github.com/ashnur/random-number/issues"
  },
  "dependencies": {},
  "description": "Generate pseudo-randum numbers",
  "devDependencies": {
    "claire": "~0.4.1",
    "tape": "~2.3.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ipG3kRCREi/YQpi2A5QGcvDz1KemohovWmH6qGfboVyyGdR2t/7zQz0vFxrfxpbHQgPPdtVlUDaks3aikD1Ljw==",
    "shasum": "5907b96f05041807c52aed601c869524d86fbbd5",
    "tarball": "https://registry.npmjs.org/random-number/-/random-number-0.0.9.tgz"
  },
  "gitHead": "3932bb11d51fccb41f13aa03b9fca9ae4a611a95",
  "homepage": "https://github.com/ashnur/random-number#readme",
  "keywords": [
    "random-number",
    "random",
    "random-integer"
  ],
  "license": "BSD-2-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ashnur",
      "email": "ashnur@gmail.com"
    }
  ],
  "name": "random-number",
  "optionalDependencies": {},
  "readme": "# random-number\ngenerate a (pseudo-)random number\n\n# install\n`npm install random-number`\n\n# usage\n``` javascript\nvar rn = require('random-number');\nrn(); // sample output → 0.704848874360323 # yes, this is just Math.random(), but it has some options\n```\n## default options\nthe exported function takes an option **object** with 3 meaningful properties\n- `min` : smallest possible value to return. defaults to 0 or max - 1 if max is defined\n- `max` : largest possible value to return. defaults to 1 or min + 1 if min is defined\n- `integer` : do you want whole numbers to be returned, or not. defaults to false\n\n### Examples\n- all three\n\n``` javascript\n// this is the functionality i like the most\nvar rn = require('random-number');\nvar options = {\n  min:  -1000\n, max:  1000\n, integer: true\n}\nrn(options) // example outputs → -187, 636\n  ```\n#### If you need the same (or almost the same settings many time) you can create a generator instead of passing the options over and over again\n\n``` javascript\nvar rn = require('random-number');\nvar gen = rn.generator({\n  min:  -1000\n, max:  1000\n, integer: true\n})\ngen() // example outputs → -350\n```\n\n#### What is neat about generators, that you can overwrite any of the settings\n*generator( min, max, integer)* - all arguments are optional:\n``` javascript\nvar rn = require('random-number');\nvar gen = rn.generator({\n  min:  -1000\n, max:  1000\n, integer: true\n})\ngen(500) // example outputs → 735\ngen(500, null, false) // example outputs → 828.6001032683998\n\n```\n\n\n- only `min`\n\n``` javascript\nvar rn = require('random-number');\nvar options = {\n  min: 9874316514 // example input\n}\nrn(options) // example output → 9874316514.958157\n```\n- only `max`\n\n``` javascript\nvar rn = require('random-number');\nvar options = {\n  max: -9874316514 // example input , yes negative values do work\n}\nrn(options) // example output → -9874316514.075052\n```\n- only `integer`\n\n``` javascript\nvar rn = require('random-number');\nvar options = {\n  integer: true\n}\n// this is basically a true/false random generator, with 50% chance to return true\nrn(options) // example output → 1\n```\n- `min` and `max`\n\n``` javascript\nvar rn = require('random-number');\nvar options = {\n  // example input , yes negative values do work\n  min:  -10\n, max: -1\n}\nrn(options) // example output → -2.47377512534149\n```\n- `min` and `integer` or `max` and `integer`\n\n``` javascript\n// completely pointless, but whatever\nvar rn = require('random-number');\nvar options = {\n  min:  1000\n, integer: true\n}\nrn(options) // example output → 1001\noptions = {\n  max:  1000\n, integer: true\n}\nrn(options) // example output → 999\n```\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ashnur/random-number.git"
  },
  "scripts": {
    "prepublish": "npm test",
    "test": "node test/test.js"
  },
  "version": "0.0.9"
}
